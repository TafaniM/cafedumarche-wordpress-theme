{"mappings":";AAAA,YAAY;AACZ,YAAY;AACZ,YAAY;AACZ,YAAY;AAEZ,SAAS,gBAAgB,CAAC,oBAAoB;IAC5C,MAAM,aAAa,SAAS,aAAa,CAAC;IAC1C,MAAM,eAAe,SAAS,aAAa,CAAC;IAC5C,MAAM,cAAc,SAAS,aAAa,CAAC;IAC3C,MAAM,YAAY,SAAS,gBAAgB,CAAC;IAC5C,MAAM,OAAO,SAAS,IAAI;IAE1B,yDAAyD;IACzD,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,aAAa;QAChD,QAAQ,KAAK,CACX;QAEF;IACF;IAEA,QAAQ,GAAG,CAAC;IAEZ,6CAA6C;IAC7C,SAAS;QACP,OAAO,aAAa,KAAK,CAAC,OAAO,KAAK;IACxC;IAEA,+BAA+B;IAC/B,SAAS;QACP,QAAQ,GAAG,CAAC;QACZ,aAAa,KAAK,CAAC,OAAO,GAAG;QAC7B,KAAK,SAAS,CAAC,GAAG,CAAC;IACrB;IAEA,+BAA+B;IAC/B,SAAS;QACP,QAAQ,GAAG,CAAC;QACZ,aAAa,KAAK,CAAC,OAAO,GAAG;QAC7B,KAAK,SAAS,CAAC,MAAM,CAAC;IACxB;IAEA,mEAAmE;IACnE,WAAW,gBAAgB,CAAC,SAAS;QACnC,IAAI,cACF;aAEA;IAEJ;IAEA,gEAAgE;IAChE,YAAY,gBAAgB,CAAC,SAAS;IAEtC,2EAA2E;IAC3E,UAAU,OAAO,CAAC,SAAU,IAAI;QAC9B,KAAK,gBAAgB,CAAC,SAAS;IACjC;IAEA,0DAA0D;IAC1D,aAAa,gBAAgB,CAAC,SAAS,SAAU,KAAK;QACpD,IAAI,MAAM,MAAM,KAAK,cACnB;IAEJ;AACF;AAEA,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AAEV,SAAS,gBAAgB,CAAC,oBAAoB;IAC5C,MAAM,SAAS,SAAS,gBAAgB,CAAC;IACzC,MAAM,aAAa,SAAS,cAAc,CAAC;IAC3C,MAAM,aAAa,SAAS,cAAc,CAAC;IAC3C,IAAI,eAAe;IACnB,IAAI;IAEJ,SAAS,UAAU,KAAK;QACtB,OAAO,OAAO,CAAC,CAAC,KAAK;YACnB,IAAI,KAAK,CAAC,OAAO,GAAG,MAAM,QAAQ,WAAW;QAC/C;QACA;IACF;IAEA,SAAS;QACP,cAAc;QACd,WAAW,YAAY,WAAW,OAAO,+BAA+B;IAC1E;IAEA,SAAS;QACP,eAAe,AAAC,CAAA,eAAe,CAAA,IAAK,OAAO,MAAM;QACjD,UAAU;IACZ;IAEA,SAAS;QACP,eAAe,AAAC,CAAA,eAAe,IAAI,OAAO,MAAM,AAAD,IAAK,OAAO,MAAM;QACjE,UAAU;IACZ;IAEA,WAAW,gBAAgB,CAAC,SAAS;IACrC,WAAW,gBAAgB,CAAC,SAAS;IAErC,wCAAwC;IACxC,UAAU;IACV,WAAW,YAAY,WAAW;AACpC;AAEA,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AAEV,SAAS,gBAAgB,CAAC,UAAU;IAClC,MAAM,WAAW,SAAS,aAAa,CAAC;IACxC,IAAI,iBAAiB,OAAO,WAAW;IACvC,SAAS,KAAK,CAAC,SAAS,GAAG,gBAAgB,iBAAiB,MAAM;AACpE","sources":["src/js/main.js"],"sourcesContent":["//burgermenu\n//burgermenu\n//burgermenu\n//burgermenu\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const menuToggle = document.querySelector(\".menu-toggle\");\n  const menuDropdown = document.querySelector(\".menu-dropdown\");\n  const closeButton = document.querySelector(\".menu-dropdown .close-button\");\n  const menuLinks = document.querySelectorAll(\".menu-dropdown a\");\n  const body = document.body;\n\n  // Vérifie si les éléments sont correctement sélectionnés\n  if (!menuToggle || !menuDropdown || !closeButton) {\n    console.error(\n      \"Un ou plusieurs éléments nécessaires n'ont pas été trouvés.\"\n    );\n    return;\n  }\n\n  console.log(\"Tous les éléments nécessaires ont été trouvés.\");\n\n  // Vérifie si le menu est actuellement ouvert\n  function isMenuOpen() {\n    return menuDropdown.style.display === \"block\";\n  }\n\n  // Fonction pour ouvrir le menu\n  function openMenu() {\n    console.log(\"Ouverture du menu\");\n    menuDropdown.style.display = \"block\";\n    body.classList.add(\"disable-scroll\");\n  }\n\n  // Fonction pour fermer le menu\n  function closeMenu() {\n    console.log(\"Fermeture du menu\");\n    menuDropdown.style.display = \"none\";\n    body.classList.remove(\"disable-scroll\");\n  }\n\n  // Ajoute un écouteur d'événements de clic au bouton du menu burger\n  menuToggle.addEventListener(\"click\", function () {\n    if (isMenuOpen()) {\n      closeMenu();\n    } else {\n      openMenu();\n    }\n  });\n\n  // Ajoute un écouteur d'événements de clic à l'image de la croix\n  closeButton.addEventListener(\"click\", closeMenu);\n\n  // Parcourir tous les liens et ajouter un gestionnaire d'événements de clic\n  menuLinks.forEach(function (link) {\n    link.addEventListener(\"click\", closeMenu);\n  });\n\n  // Ferme le menu si l'utilisateur clique en dehors du menu\n  menuDropdown.addEventListener(\"click\", function (event) {\n    if (event.target === menuDropdown) {\n      closeMenu();\n    }\n  });\n});\n\n//carousel\n//carousel\n//carousel\n//carousel\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const images = document.querySelectorAll(\".carousel img\");\n  const prevButton = document.getElementById(\"prevButton\");\n  const nextButton = document.getElementById(\"nextButton\");\n  let currentIndex = 0;\n  let interval;\n\n  function showImage(index) {\n    images.forEach((img, i) => {\n      img.style.display = i === index ? \"inline\" : \"none\";\n    });\n    resetInterval();\n  }\n\n  function resetInterval() {\n    clearInterval(interval);\n    interval = setInterval(nextImage, 4000); // Change image every 3 seconds\n  }\n\n  function nextImage() {\n    currentIndex = (currentIndex + 1) % images.length;\n    showImage(currentIndex);\n  }\n\n  function prevImage() {\n    currentIndex = (currentIndex - 1 + images.length) % images.length;\n    showImage(currentIndex);\n  }\n\n  prevButton.addEventListener(\"click\", prevImage);\n  nextButton.addEventListener(\"click\", nextImage);\n\n  // Initial display and start auto-scroll\n  showImage(currentIndex);\n  interval = setInterval(nextImage, 3000);\n});\n\n//parallax\n//parallax\n//parallax\n//parallax\n\ndocument.addEventListener(\"scroll\", function () {\n  const parallax = document.querySelector(\".home .background-image\");\n  let scrollPosition = window.pageYOffset;\n  parallax.style.transform = \"translateY(\" + scrollPosition * 0.5 + \"px)\";\n});\n"],"names":[],"version":3,"file":"index.js.map"}